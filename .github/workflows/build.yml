name: github CI(Continuous Integration)
on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '**'           # Push events to every tag including hierarchical tags like v1.0/beta
jobs:
  build-project: # first job: create Verilog file and upload to Github Actions Page
    permissions: write-all # git permissions to this job or you can't create a release in the following step
    name: Build-Project # job name which will show in Github
    runs-on: ubuntu-latest # define the OS which the jobs runs on, must be defined for each job not the whole workflow
    # container: node:17.6.0 # setup node version in docker container
    steps: # define a list of steps of this job
      - name: Checkout Codes # clone all Github codes to container
        uses: actions/checkout@v2
      - name: Get Verilog Top # cat all verilog files into one file
        run: |
          ls ${{ github.workspace }}/vsrc  
          touch top.v
          cat ${{ github.workspace }}/vsrc/*.v > top.v
          cat top.v
      - name: Upload Verilog File # upload top.v file, the file can be found in Github Actions Page, we can download it
        uses: actions/upload-artifact@v2
        with:
          name: verilog-file # this name will be used later
          path: top.v
  release-project: # second job: download Verilog file and Create a Github Release
    permissions: write-all # git permissions to this job or you can't create a release in the following step
    name: Release-Project
    runs-on: ubuntu-latest
    needs: build-project # dependency project
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Download Verilog content
        uses: actions/download-artifact@v2
        with:
          name: verilog-file # set download target
      - name: View content # show all contents in download file
        run: ls -R
      - name: Create GitHub release # create a Github release
        id: create-new-release # set ID for this step, will be use later
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }} 
          release_name: Release ${{ env.RELEASE_VERSION }} 
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./top.v # source file for release
          asset_name: verilog-top.v # name of release
          asset_content_type: application/zip
